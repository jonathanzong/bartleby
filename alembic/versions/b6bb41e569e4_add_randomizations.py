"""Add randomizations

Revision ID: b6bb41e569e4
Revises: 067975addada
Create Date: 2017-12-18 15:01:09.175583

"""

# revision identifiers, used by Alembic.
revision = 'b6bb41e569e4'
down_revision = '067975addada'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_development():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('randomizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('randomization_id', sa.String(length=64), nullable=True),
    sa.Column('stratum', sa.String(length=64), nullable=True),
    sa.Column('block_id', sa.String(length=64), nullable=True),
    sa.Column('block_size', sa.Integer(), nullable=True),
    sa.Column('treatment', sa.Integer(), nullable=True),
    sa.Column('assigned', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_randomizations_stratum'), 'randomizations', ['stratum'], unique=False)
    op.drop_column('experiments', 'randomizations')
    # ### end Alembic commands ###


def downgrade_development():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('experiments', sa.Column('randomizations', sa.BLOB(), nullable=True))
    op.drop_index(op.f('ix_randomizations_stratum'), table_name='randomizations')
    op.drop_table('randomizations')
    # ### end Alembic commands ###


def upgrade_test():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('randomizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('randomization_id', sa.String(length=64), nullable=True),
    sa.Column('stratum', sa.String(length=64), nullable=True),
    sa.Column('block_id', sa.String(length=64), nullable=True),
    sa.Column('block_size', sa.Integer(), nullable=True),
    sa.Column('treatment', sa.Integer(), nullable=True),
    sa.Column('assigned', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_randomizations_stratum'), 'randomizations', ['stratum'], unique=False)
    op.drop_column('experiments', 'randomizations')
    # ### end Alembic commands ###


def downgrade_test():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('experiments', sa.Column('randomizations', sa.BLOB(), nullable=True))
    op.drop_index(op.f('ix_randomizations_stratum'), table_name='randomizations')
    op.drop_table('randomizations')
    # ### end Alembic commands ###


def upgrade_production():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('randomizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('randomization_id', sa.String(length=64), nullable=True),
    sa.Column('stratum', sa.String(length=64), nullable=True),
    sa.Column('block_id', sa.String(length=64), nullable=True),
    sa.Column('block_size', sa.Integer(), nullable=True),
    sa.Column('treatment', sa.Integer(), nullable=True),
    sa.Column('assigned', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_randomizations_stratum'), 'randomizations', ['stratum'], unique=False)
    op.drop_column('experiments', 'randomizations')
    # ### end Alembic commands ###


def downgrade_production():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('experiments', sa.Column('randomizations', sa.BLOB(), nullable=True))
    op.drop_index(op.f('ix_randomizations_stratum'), table_name='randomizations')
    op.drop_table('randomizations')
    # ### end Alembic commands ###

